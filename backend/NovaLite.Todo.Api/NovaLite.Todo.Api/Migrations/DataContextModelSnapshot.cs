// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NovaLite.Todo.Core.Data;

#nullable disable

namespace NovaLite.Todo.Api.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NovaLite.Todo.Core.Models.ToDoList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("TodoUserId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TodoUserId");

                    b.ToTable("ToDoLists");
                });

            modelBuilder.Entity("NovaLite.Todo.Core.Models.TodoAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("toDoListId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("toDoListId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("NovaLite.Todo.Core.Models.TodoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<Guid?>("toDoListId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("toDoListId");

                    b.ToTable("ToDoItems");
                });

            modelBuilder.Entity("NovaLite.Todo.Core.Models.TodoReminder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Sent")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("toDoListId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("toDoListId");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("NovaLite.Todo.Core.Models.TodoUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NovaLite.Todo.Core.Models.ToDoList", b =>
                {
                    b.HasOne("NovaLite.Todo.Core.Models.TodoUser", "toDoUser")
                        .WithMany("ToDoLists")
                        .HasForeignKey("TodoUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("toDoUser");
                });

            modelBuilder.Entity("NovaLite.Todo.Core.Models.TodoAttachment", b =>
                {
                    b.HasOne("NovaLite.Todo.Core.Models.ToDoList", "toDoList")
                        .WithMany("Attachments")
                        .HasForeignKey("toDoListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("toDoList");
                });

            modelBuilder.Entity("NovaLite.Todo.Core.Models.TodoItem", b =>
                {
                    b.HasOne("NovaLite.Todo.Core.Models.ToDoList", "toDoList")
                        .WithMany("toDoItems")
                        .HasForeignKey("toDoListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("toDoList");
                });

            modelBuilder.Entity("NovaLite.Todo.Core.Models.TodoReminder", b =>
                {
                    b.HasOne("NovaLite.Todo.Core.Models.ToDoList", "toDoList")
                        .WithMany("Reminders")
                        .HasForeignKey("toDoListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("toDoList");
                });

            modelBuilder.Entity("NovaLite.Todo.Core.Models.ToDoList", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Reminders");

                    b.Navigation("toDoItems");
                });

            modelBuilder.Entity("NovaLite.Todo.Core.Models.TodoUser", b =>
                {
                    b.Navigation("ToDoLists");
                });
#pragma warning restore 612, 618
        }
    }
}
